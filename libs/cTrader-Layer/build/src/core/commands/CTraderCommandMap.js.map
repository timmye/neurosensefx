{"version":3,"file":"CTraderCommandMap.js","sourceRoot":"","sources":["../../../../src/core/commands/CTraderCommandMap.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qDAA0D;AAI1D,MAAa,iBAAiB;IAI1B,YAAoB,EAAE,IAAI,GAAgC;QAH1D,kDAAoD;QACpD,0CAA+C;QAG3C,uBAAA,IAAI,mCAAiB,IAAI,GAAG,EAAE,MAAA,CAAC;QAC/B,uBAAA,IAAI,2BAAS,IAAI,MAAA,CAAC;IACtB,CAAC;IAED,IAAW,YAAY;QACnB,OAAO,CAAE,GAAG,uBAAA,IAAI,uCAAc,CAAC,MAAM,EAAE,EAAG,CAAC;IAC/C,CAAC;IAEM,MAAM,CAAE,EAAE,WAAW,EAAE,OAAO,GAGpC;QACG,MAAM,OAAO,GAAmB,IAAI,+BAAc,CAAC,EAAE,WAAW,GAAG,CAAC,CAAC;QAErE,uBAAA,IAAI,uCAAc,CAAC,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAC7C,uBAAA,IAAI,+BAAM,MAAV,IAAI,EAAO,OAAO,CAAC,CAAC;QAEpB,OAAO,OAAO,CAAC,eAAe,CAAC;IACnC,CAAC;IAEM,WAAW,CAAE,WAAmB;QACnC,MAAM,OAAO,GAA+B,uBAAA,IAAI,uCAAc,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAEhF,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,SAAS,CAAC;SACpB;QAED,uBAAA,IAAI,uCAAc,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAEvC,OAAO,OAAO,CAAC;IACnB,CAAC;CACJ;AApCD,8CAoCC","sourcesContent":["import { CTraderCommand } from \"#commands/CTraderCommand\";\nimport { CTraderCommandMapParameters } from \"#commands/CTraderCommandMapParameters\";\nimport { GenericObject } from \"#utilities/GenericObject\";\n\nexport class CTraderCommandMap {\n    readonly #openCommands: Map<string, CTraderCommand>;\n    readonly #send: (...parameters: any[]) => void;\n\n    public constructor ({ send, }: CTraderCommandMapParameters) {\n        this.#openCommands = new Map();\n        this.#send = send;\n    }\n\n    public get openCommands (): CTraderCommand[] {\n        return [ ...this.#openCommands.values(), ];\n    }\n\n    public create ({ clientMsgId, message, }: {\n        clientMsgId: string;\n        message: GenericObject;\n    }): Promise<GenericObject> {\n        const command: CTraderCommand = new CTraderCommand({ clientMsgId, });\n\n        this.#openCommands.set(clientMsgId, command);\n        this.#send(message);\n\n        return command.responsePromise;\n    }\n\n    public extractById (clientMsgId: string): CTraderCommand | undefined {\n        const command: CTraderCommand | undefined = this.#openCommands.get(clientMsgId);\n\n        if (!command) {\n            return undefined;\n        }\n\n        this.#openCommands.delete(clientMsgId);\n\n        return command;\n    }\n}\n"]}