{"version":3,"file":"CTraderSocket.js","sourceRoot":"","sources":["../../../../src/core/sockets/CTraderSocket.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,2BAA2B;AAG3B,MAAa,aAAa;IAKtB,YAAoB,EAAE,IAAI,EAAE,IAAI,GAA4B;QAJ5D,sCAAuB;QACvB,sCAAuB;QACvB,wCAAwB;QAGpB,uBAAA,IAAI,uBAAS,IAAI,MAAA,CAAC;QAClB,uBAAA,IAAI,uBAAS,IAAI,MAAA,CAAC;QAClB,uBAAA,IAAI,yBAAW,SAAS,MAAA,CAAC;IAC7B,CAAC;IAED,IAAW,IAAI;QACX,OAAO,uBAAA,IAAI,2BAAM,CAAC;IACtB,CAAC;IAED,IAAW,IAAI;QACX,OAAO,uBAAA,IAAI,2BAAM,CAAC;IACtB,CAAC;IAEM,OAAO;QAEV,MAAM,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,uBAAA,IAAI,2BAAM,EAAE,uBAAA,IAAI,2BAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEhE,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/B,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/B,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAEjC,uBAAA,IAAI,yBAAW,MAAM,MAAA,CAAC;IAC1B,CAAC;IAEM,IAAI,CAAE,MAAc;;QACvB,MAAA,uBAAA,IAAI,6BAAQ,0CAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAChC,CAAC;IAEM,MAAM;IAEb,CAAC;IAEM,MAAM,CAAE,GAAG,UAAiB;IAEnC,CAAC;IAEM,OAAO;IAEd,CAAC;IAEM,OAAO;IAEd,CAAC;CACJ;AAjDD,sCAiDC","sourcesContent":["import * as tls from \"tls\";\nimport { CTraderSocketParameters } from \"#sockets/CTraderSocketParameters\";\n\nexport class CTraderSocket {\n    readonly #host: string;\n    readonly #port: number;\n    #socket?: tls.TLSSocket;\n\n    public constructor ({ host, port, }: CTraderSocketParameters) {\n        this.#host = host;\n        this.#port = port;\n        this.#socket = undefined;\n    }\n\n    public get host (): string {\n        return this.#host;\n    }\n\n    public get port (): number {\n        return this.#port;\n    }\n\n    public connect (): void {\n        // @ts-ignore\n        const socket = tls.connect(this.#port, this.#host, this.onOpen);\n\n        socket.on(\"data\", this.onData);\n        socket.on(\"end\", this.onClose);\n        socket.on(\"error\", this.onError);\n\n        this.#socket = socket;\n    }\n\n    public send (buffer: Buffer): void {\n        this.#socket?.write(buffer);\n    }\n\n    public onOpen (): void {\n        // Silence is golden.\n    }\n\n    public onData (...parameters: any[]): void {\n        // Silence is golden.\n    }\n\n    public onClose (): void {\n        // Silence is golden.\n    }\n\n    public onError (): void {\n        // Silence is golden.\n    }\n}\n"]}