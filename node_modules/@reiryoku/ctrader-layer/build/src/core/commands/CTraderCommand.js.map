{"version":3,"file":"CTraderCommand.js","sourceRoot":"","sources":["../../../../src/core/commands/CTraderCommand.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAGA,MAAa,cAAc;IAOvB,YAAoB,EAAE,WAAW,GAA6B;QAN9D,8CAA8B;QAC9B,kDAAkD;QAClD,2CAA0B;QAC1B,0CAA6C;QAC7C,yCAA4C;QAGxC,uBAAA,IAAI,+BAAgB,WAAW,MAAA,CAAC;QAChC,uBAAA,IAAI,mCAAoB,IAAI,OAAO,CAAC,CAAC,OAA0C,EAAE,MAAyC,EAAE,EAAE;YAC1H,uBAAA,IAAI,2BAAY,OAAO,MAAA,CAAC;YACxB,uBAAA,IAAI,0BAAW,MAAM,MAAA,CAAC;QAC1B,CAAC,CAAC,MAAA,CAAC;QACH,uBAAA,IAAI,4BAAa,SAAS,MAAA,CAAC;IAC/B,CAAC;IAED,IAAW,WAAW;QAClB,OAAO,uBAAA,IAAI,mCAAa,CAAC;IAC7B,CAAC;IAED,IAAW,eAAe;QACtB,OAAO,uBAAA,IAAI,uCAAiB,CAAC;IACjC,CAAC;IAED,IAAW,QAAQ;QACf,OAAO,uBAAA,IAAI,gCAAU,CAAC;IAC1B,CAAC;IAEM,OAAO,CAAE,QAAuB;;QACnC,uBAAA,IAAI,4BAAa,QAAQ,MAAA,CAAC;QAC1B,MAAA,uBAAA,IAAI,+BAAS,+CAAb,IAAI,EAAY,QAAQ,CAAC,CAAC;IAC9B,CAAC;IAEM,MAAM,CAAE,QAAuB;;QAClC,uBAAA,IAAI,4BAAa,QAAQ,MAAA,CAAC;QAC1B,MAAA,uBAAA,IAAI,8BAAQ,+CAAZ,IAAI,EAAW,QAAQ,CAAC,CAAC;IAC7B,CAAC;CACJ;AArCD,wCAqCC","sourcesContent":["import { CTraderCommandParameters } from \"#commands/CTraderCommandParameters\";\nimport { GenericObject } from \"#utilities/GenericObject\";\n\nexport class CTraderCommand {\n    readonly #clientMsgId: string;\n    readonly #responsePromise: Promise<GenericObject>;\n    #response?: GenericObject;\n    #resolve?: (response: GenericObject) => void;\n    #reject?: (response: GenericObject) => void;\n\n    public constructor ({ clientMsgId, }: CTraderCommandParameters) {\n        this.#clientMsgId = clientMsgId;\n        this.#responsePromise = new Promise((resolve: (response: GenericObject) => void, reject: (response: GenericObject) => void) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n        });\n        this.#response = undefined;\n    }\n\n    public get clientMsgId (): string {\n        return this.#clientMsgId;\n    }\n\n    public get responsePromise (): Promise<GenericObject> {\n        return this.#responsePromise;\n    }\n\n    public get response (): GenericObject | undefined {\n        return this.#response;\n    }\n\n    public resolve (response: GenericObject): void {\n        this.#response = response;\n        this.#resolve?.(response);\n    }\n\n    public reject (response: GenericObject): void {\n        this.#response = response;\n        this.#reject?.(response);\n    }\n}\n"]}